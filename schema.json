{
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "title": "Detail",
                        "type": "array"
                    }
                },
                "title": "HTTPValidationError",
                "type": "object"
            },
            "Input": {
                "properties": {
                    "cut_off_sec": {
                        "default": 3.01,
                        "description": "Only used for for zero-shot text-to-speech task. The first seconds of the original audio that are used for zero-shot text-to-speech. 3 sec of reference is generally enough for high quality voice cloning, but longer is generally better, try e.g. 3~6 sec",
                        "title": "Cut Off Sec",
                        "type": "number",
                        "x-order": 6
                    },
                    "kvcache": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/kvcache"
                            }
                        ],
                        "default": 1,
                        "description": "Set to 0 to use less VRAM, but with slower inference",
                        "x-order": 7
                    },
                    "left_margin": {
                        "default": 0.08,
                        "description": "Margin to the left of the editing segment",
                        "title": "Left Margin",
                        "type": "number",
                        "x-order": 8
                    },
                    "orig_audio": {
                        "description": "Original audio file",
                        "format": "uri",
                        "title": "Orig Audio",
                        "type": "string",
                        "x-order": 2
                    },
                    "orig_transcript": {
                        "default": "",
                        "description": "Optionally provide the transcript of the input audio. Leave it blank to use the WhisperX model below to generate the transcript. Inaccurate transcription may lead to error TTS or speech editing",
                        "title": "Orig Transcript",
                        "type": "string",
                        "x-order": 3
                    },
                    "right_margin": {
                        "default": 0.08,
                        "description": "Margin to the right of the editing segment",
                        "title": "Right Margin",
                        "type": "number",
                        "x-order": 9
                    },
                    "sample_batch_size": {
                        "default": 4,
                        "description": "Default value for TTS is 4, and 1 for speech editing. The higher the number, the faster the output will be. Under the hood, the model will generate this many samples and choose the shortest one",
                        "title": "Sample Batch Size",
                        "type": "integer",
                        "x-order": 13
                    },
                    "seed": {
                        "description": "Random seed. Leave blank to randomize the seed",
                        "title": "Seed",
                        "type": "integer",
                        "x-order": 14
                    },
                    "stop_repetition": {
                        "default": 3,
                        "description": "Default value for TTS is 3, and -1 for speech editing. -1 means do not adjust prob of silence tokens. if there are long silence or unnaturally stretched words, increase sample_batch_size to 2, 3 or even 4",
                        "title": "Stop Repetition",
                        "type": "integer",
                        "x-order": 12
                    },
                    "target_transcript": {
                        "description": "Transcript of the target audio file",
                        "title": "Target Transcript",
                        "type": "string",
                        "x-order": 5
                    },
                    "task": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/task"
                            }
                        ],
                        "default": "zero-shot text-to-speech",
                        "description": "Choose a task",
                        "x-order": 0
                    },
                    "temperature": {
                        "default": 1,
                        "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic. Do not recommend to change",
                        "title": "Temperature",
                        "type": "number",
                        "x-order": 10
                    },
                    "top_p": {
                        "default": 0.9,
                        "description": "Default value for TTS is 0.9, and 0.8 for speech editing",
                        "title": "Top P",
                        "type": "number",
                        "x-order": 11
                    },
                    "voicecraft_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/voicecraft_model"
                            }
                        ],
                        "default": "giga330M_TTSEnhanced.pth",
                        "description": "Choose a model",
                        "x-order": 1
                    },
                    "whisperx_model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/whisperx_model"
                            }
                        ],
                        "default": "base.en",
                        "description": "If orig_transcript is not provided above, choose WhisperX model. Inaccurate transcription may lead to error TTS or speech editing. You can modify the generated transcript and provide it directly to ",
                        "x-order": 4
                    },
                    "start": {
                        "description": "Start time of token to replace in seconds",
                        "title": "Start",
                        "type": "number",
                        "x-order": 15
                    },
                    "end": {
                        "description": "End time of token to replace in seconds",
                        "title": "End",
                        "type": "number",
                        "x-order": 16
                    }
                },
                "required": [
                    "orig_audio",
                    "target_transcript"
                ],
                "title": "Input",
                "type": "object"
            },
            "ModelOutput": {
                "properties": {
                    "generated_audio": {
                        "format": "uri",
                        "title": "Generated Audio",
                        "type": "string"
                    },
                    "whisper_transcript_orig_audio": {
                        "title": "Whisper Transcript Orig Audio",
                        "type": "string"
                    }
                },
                "required": [
                    "whisper_transcript_orig_audio",
                    "generated_audio"
                ],
                "title": "ModelOutput",
                "type": "object"
            },
            "Output": {
                "$ref": "#/components/schemas/ModelOutput"
            },
            "PredictionRequest": {
                "properties": {
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "input": {
                        "$ref": "#/components/schemas/Input"
                    },
                    "output_file_prefix": {
                        "title": "Output File Prefix",
                        "type": "string"
                    },
                    "webhook": {
                        "format": "uri",
                        "maxLength": 65536,
                        "minLength": 1,
                        "title": "Webhook",
                        "type": "string"
                    },
                    "webhook_events_filter": {
                        "default": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/WebhookEvent"
                        },
                        "type": "array"
                    }
                },
                "title": "PredictionRequest",
                "type": "object"
            },
            "PredictionResponse": {
                "properties": {
                    "completed_at": {
                        "format": "date-time",
                        "title": "Completed At",
                        "type": "string"
                    },
                    "created_at": {
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "error": {
                        "title": "Error",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string"
                    },
                    "input": {
                        "$ref": "#/components/schemas/Input"
                    },
                    "logs": {
                        "default": "",
                        "title": "Logs",
                        "type": "string"
                    },
                    "metrics": {
                        "title": "Metrics",
                        "type": "object"
                    },
                    "output": {
                        "$ref": "#/components/schemas/Output"
                    },
                    "started_at": {
                        "format": "date-time",
                        "title": "Started At",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "version": {
                        "title": "Version",
                        "type": "string"
                    }
                },
                "title": "PredictionResponse",
                "type": "object"
            },
            "Status": {
                "description": "An enumeration.",
                "enum": [
                    "starting",
                    "processing",
                    "succeeded",
                    "canceled",
                    "failed"
                ],
                "title": "Status",
                "type": "string"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "title": "Location",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError",
                "type": "object"
            },
            "WebhookEvent": {
                "description": "An enumeration.",
                "enum": [
                    "start",
                    "output",
                    "logs",
                    "completed"
                ],
                "title": "WebhookEvent",
                "type": "string"
            },
            "kvcache": {
                "description": "An enumeration.",
                "enum": [
                    0,
                    1
                ],
                "title": "kvcache",
                "type": "integer"
            },
            "task": {
                "description": "An enumeration.",
                "enum": [
                    "speech_editing-substitution",
                    "speech_editing-insertion",
                    "speech_editing-deletion",
                    "zero-shot text-to-speech"
                ],
                "title": "task",
                "type": "string"
            },
            "voicecraft_model": {
                "description": "An enumeration.",
                "enum": [
                    "giga830M.pth",
                    "giga330M.pth",
                    "giga330M_TTSEnhanced.pth"
                ],
                "title": "voicecraft_model",
                "type": "string"
            },
            "whisperx_model": {
                "description": "An enumeration.",
                "enum": [
                    "base.en",
                    "small.en",
                    "medium.en"
                ],
                "title": "whisperx_model",
                "type": "string"
            }
        }
    },
    "info": {
        "title": "Cog",
        "version": "0.1.0"
    },
    "openapi": "3.1.0",
    "paths": {
        "/": {
            "get": {
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Root  Get"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Root"
            }
        },
        "/health-check": {
            "get": {
                "operationId": "healthcheck_health_check_get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Healthcheck Health Check Get"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Healthcheck"
            }
        },
        "/predictions": {
            "post": {
                "description": "Run a single prediction on the model",
                "operationId": "predict_predictions_post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "prefer",
                        "required": false,
                        "schema": {
                            "title": "Prefer",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PredictionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredictionResponse"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Predict"
            }
        },
        "/predictions/{prediction_id}": {
            "put": {
                "description": "Run a single prediction on the model (idempotent creation).",
                "operationId": "predict_idempotent_predictions__prediction_id__put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "prediction_id",
                        "required": true,
                        "schema": {
                            "title": "Prediction ID",
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "prefer",
                        "required": false,
                        "schema": {
                            "title": "Prefer",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                ],
                                "title": "Prediction Request"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredictionResponse"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Predict Idempotent"
            }
        },
        "/predictions/{prediction_id}/cancel": {
            "post": {
                "description": "Cancel a running prediction",
                "operationId": "cancel_predictions__prediction_id__cancel_post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "prediction_id",
                        "required": true,
                        "schema": {
                            "title": "Prediction ID",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Cancel"
            }
        },
        "/shutdown": {
            "post": {
                "operationId": "start_shutdown_shutdown_post",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Start Shutdown Shutdown Post"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Start Shutdown"
            }
        }
    }
}